@model cfab.ViewModels.DateFormViewModel
@{
    ViewBag.Title = "Results";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Html.Raw(Model.Date.DateName)</h2>

<div id="names">
</div>
<table id="results" class="table table-condensed table-hover table-style" border-color='white'>
    <thead>
        <tr>
            <th>Venue Name</th>
            <th>Address</th>
            <th>Price</th>
            <th>Rating</th>
            <th>Hours</th>
            <th>Website</th>
        </tr>
    </thead>
    <tbody>
        <tr></tr>
    </tbody>
</table>
<div id="floating-panel">
    @*<b>Start: </b>
    <select id="start">
        <option value="333 North Plankinton Ave Milwaukee, WI 53203">Current Location</option>
    </select>
    <b>End: </b>
    <select id="end">
        <option value="">Destination</option>
        <option value="142 W Wisconsin Ave, Milwaukee, WI 53203">Moes Irish Pub</option>
        <option value="2060 N Humboldt Blvd #1, Milwaukee, WI 53212">Stubby's</option>
        <option value="2022 E North Ave, Milwaukee, WI 53202">BBC</option>
    </select>*@
</div>
@*<button onclick="calculateAndDisplayRoute(directionsService, directionsDisplay, address)">Direction</button>*@
<div id="map"></div>
<center>
    <div class="row">
        <script src="@Url.Content("~/Scripts/Weather.js")"></script>
        <table id="showResults" class="table table-condensed table-hover " border-color='white'>
            <thead>
                <tr>
                    <th></th>
                    <th>Date</th>
                    <th>City</th>
                    <th>Temp</th>
                    <th>Forecast</th>
                    <th>Wind</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

    </div>
</center>

<script defer type="text/javascript">
    var $results = $('#results');
    var dateName = @Html.Raw(Json.Encode(Model.Date.DateName));
    var datePrice = @Html.Raw(Json.Encode(Model.Date.DatePriceId));
    var restaurantType = @Html.Raw(Json.Encode(Model.Date.RestaurantTypeId));
    var dateType = @Html.Raw(Json.Encode(Model.Date.DateTypeId));
    var isEating = @Html.Raw(Json.Encode(Model.Date.DateTypeId));
    var startAddress = @Html.Raw(Json.Encode(Model.Date.StreetOne));
    var zipCodeStart = @Model.Date.Zipcode.ZipCodeNum;
    var city = "Milwaukee";
    //var dayOfDate = @Model.Date.DayOfDate;
    var map;
    
    function addMtsToMap(location, map) {

        var marker = new google.maps.Marker({
            position: location,
            map: map,
        });
    }

    function geoCode(address){
        geocoder = new google.maps.Geocoder();
        
        var parseAdd = address.replace(/\s/g, "+");

        geocoder.geocode({'address': parseAdd + ","+ city + ","+"WI"+","+ zipCodeStart }, function(results, status) {

            if (status == google.maps.GeocoderStatus.OK) {

                address = results[0].geometry.location;
                addMtsToMap(address, map);
            }
        });
    }

    

    function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
         map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: {lat: 43.0389, lng: -87.9065}
        });
        geocoder = new google.maps.Geocoder();
        
        var parseAdd = startAddress.replace(/\s/g, "+");

        geocoder.geocode({'address': parseAdd + ","+ city + ","+"WI"+","+ zipCodeStart }, function(results, status) {

            if (status == google.maps.GeocoderStatus.OK) {

                address = results[0].geometry.location;
                addMtsToMap(address, map);
            }
        });

        
        directionsDisplay.setMap(map);

        var onChangeHandler = function() {
            calculateAndDisplayRoute(directionsService, directionsDisplay, address, startAddress);
        };
        //document.getElementById('start').addEventListener('change', onChangeHandler);
        //document.getElementById('end').addEventListener('change', onChangeHandler);
    }

    function calculateAndDisplayRoute(directionsService, directionsDisplay, address, startAddress) {
        directionsService.route({
            origin: startAddress,
        destination: address,
        travelMode: 'DRIVING'
    }, function(response, status) {
        if (status === 'OK') {
            directionsDisplay.setDirections(response);
        } else {
            window.alert('Directions request failed due to ' + status);
        }
    });
    }





    $(document).ready(function(){
        //var apiURL = getURL();
        var apiPiece = getFourSquareAPI();
        var clientIdPiece = getClientId();
        var clientSecretPiece = getClientSecret();
        var locationPiece = getLocation();
        //var jsonDateFormatted = parseJsonDate(dayOfDate);
        //var vDatePiece = getVDate(dayOfDate.toString());
        var keywordUrlPiece = getUrlKeyword(restaurantType);
        var priceUrlPiece = getPrice(datePrice, dateType);
        var dateTypePiece = getUrlDateType(dateType);
        var apiUrl = apiPiece + locationPiece + dateTypePiece + keywordUrlPiece + priceUrlPiece + clientIdPiece + clientSecretPiece + 'v=20171114';
            var testApiUrl = 'https://api.foursquare.com/v2/venues/explore?near=milwaukee&section=coffee,drinks&query=chill&price=3&client_id=1Y32SY1QBKL3UNRRDO5HFGXEBVT40DMQBCRZE0MUATAJNQMK&client_secret=UE3VNOOO30ZHVUCXKMFPDJZUYQZOM4XI0JTUH5CJQZDUG5QS&v=20170214';
            dataType: 'jsonp',
          $.ajax({
              type: 'GET',
              url: apiUrl,
              dataType: 'jsonp',
              success: function(places){
                  console.log(places);

                  showResults(places);
              },
          });
    });

    function showResults(data){
        var count = data.response;
        var fourSquare = data.response.groups[0];
        var fourSquareArray = sortByRating(fourSquare);
        var iterations = 10;
        if(fourSquareArray.length < iterations){
            iterations = fourSquareArray.length;
        }
        for(var i = 0; i < iterations ;i++){
            $results.append('<tr id="row'+i+'" ><td>'+ fourSquareArray[i].venue.name +'</td>'
                + '<td id="address'+i+'" onclick="geoCode($(\'#address'+i+'\').val())">'+ fourSquareArray[i].venue.location.address+ '</td>'
                +  '<td>'+ (fourSquareArray[i].venue.price === undefined ? "NA" : fourSquareArray[i].venue.price.message) + '</td>'
                + '<td>'+ fourSquareArray[i].venue.rating + '</td>'
                +'<td>'+ (fourSquareArray[i].venue.hours === undefined ? "NA" : fourSquareArray[i].venue.hours.status) + '</td>'
                +'<td>'+ "<a href="+fourSquareArray[i].venue.url+'>'+fourSquareArray[i].venue.url+'</a>' + '</td></tr>' );
        }
    }
    function showMap(){

    }
    //'<tr id="row'+i+'" ><td>'

    function sortByRating(fourSquareData){
        var data = eval(fourSquareData);
        var items = data['items']
        items.sort(function(b,a){
            //return a.venue.rating - b.venue.rating;
            if(a.venue.rating  == b.venue.rating )
                return 0;
            if(a.venue.rating  < b.venue.rating )
                return -1;
            if(a.venue.rating  > b.venue.rating )
                return 1;
        });
        return items;
    }
    function getUrlDateType(keyword){
        if(keyword == 1)
            return 'section=drinks,coffee&';
        if(keyword == 2)
            return 'section=outdoors&';
        if(keyword == 3)
            return 'section=arts&';
        else{return "";}
    }
    function getUrlKeyword(keyword, dateType){
        if(keyword == 1 )
            return 'query=chill&';
        if(keyword == 2)
            return 'query=romantic&';
        if(keyword == 3)
            return 'query=lively&';
        else{return "";}
    }
    function getPrice(dateCost, date){
        if(dateCost == 2 && date == 1)
            return 'price=1&';
        else if(dateCost == 3 && date == 1)
            return 'price=2&';
        else if(dateCost == 4 && date == 1)
            return 'price=3&';
        else if(dateCost == 5 && date == 1)
            return 'price=4&';
        else{return "";}
    }

    function parseJsonDate(jsonDateString){
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }

    function filterByMenu(resturantAnswer, jsonResult){
        if(resturantAnswer == true){
            var newarray= jsonResult.response.groups["0"].items.filter(function(place){
                if(place.venue.hasMenu == true || place.venue.hasMenu == undefined);
                return place.venue;
            });
            return newarray;
        }
    }
    function getVDate(dayOfdate){
        var dayOftheYear = dayOfdate.toString();
        var identifyPosition = dayOftheYear.lastIndexOf("/");
        var yearToUse = dayOftheYear.substr(identifyPosition+1);
        var dayOfMonth = dayOftheYear.substr(identifyPosition - 2, 2);
        var resultsOfCheck = CheckMonth(dayOftheYear);
        var month = resultsOfCheck.substr(0,2);
        return '&v='+ yearToUse + month + dayOfMonth ;
    }
    function appendUrlWithVdate(vDate, urlToAppend){
        var vDateUrl = GetVDate(vDate);
        return urlToAppend.concat(vDateUrl);
    }
    function getFourSquareAPI(){
        return 'https://api.foursquare.com/v2/venues/';
    }
    function getClientId(){
        return 'client_id=1Y32SY1QBKL3UNRRDO5HFGXEBVT40DMQBCRZE0MUATAJNQMK&';
    }
    function getClientSecret(){
        return 'client_secret=UE3VNOOO30ZHVUCXKMFPDJZUYQZOM4XI0JTUH5CJQZDUG5QS&';
    }
    function getLocation(){
        return 'explore?near=milwaukee&';
    }




</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAMsdtIJeIOHIEJZGvUedcU5mNZaOha0fE&callback=initMap&libraries=places,visualization">
</script>